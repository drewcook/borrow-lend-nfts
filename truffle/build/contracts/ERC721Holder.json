{
	"contractName": "ERC721Holder",
	"abi": [
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				},
				{
					"internalType": "bytes",
					"name": "",
					"type": "bytes"
				}
			],
			"name": "onERC721Received",
			"outputs": [
				{
					"internalType": "bytes4",
					"name": "",
					"type": "bytes4"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	],
	"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xaad20f8713b5cd98114278482d5d91b9758f9727048527d582e8e88fd4901fd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5396e8dbb000c2fada59b7d2093b9c7c870fd09413ab0fdaba45d882959c6244\",\"dweb:/ipfs/QmXQn5XckSiUsUBpMYuiFeqnojRX4rKa9jmgjCPeTuPmhh\"]}},\"version\":1}",
	"bytecode": "0x",
	"deployedBytecode": "0x",
	"immutableReferences": {},
	"generatedSources": [],
	"deployedGeneratedSources": [],
	"sourceMap": "",
	"deployedSourceMap": "",
	"source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or\n * {IERC721-setApprovalForAll}.\n */\nabstract contract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n",
	"sourcePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
	"ast": {
		"absolutePath": "@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol",
		"exportedSymbols": {
			"ERC721Holder": [1335],
			"IERC721Receiver": [1280]
		},
		"id": 1336,
		"license": "MIT",
		"nodeType": "SourceUnit",
		"nodes": [
			{
				"id": 1310,
				"literals": ["solidity", "^", "0.8", ".20"],
				"nodeType": "PragmaDirective",
				"src": "119:24:5"
			},
			{
				"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
				"file": "../IERC721Receiver.sol",
				"id": 1312,
				"nameLocation": "-1:-1:-1",
				"nodeType": "ImportDirective",
				"scope": 1336,
				"sourceUnit": 1281,
				"src": "145:55:5",
				"symbolAliases": [
					{
						"foreign": {
							"id": 1311,
							"name": "IERC721Receiver",
							"nodeType": "Identifier",
							"overloadedDeclarations": [],
							"referencedDeclaration": 1280,
							"src": "153:15:5",
							"typeDescriptions": {}
						},
						"nameLocation": "-1:-1:-1"
					}
				],
				"unitAlias": ""
			},
			{
				"abstract": true,
				"baseContracts": [
					{
						"baseName": {
							"id": 1314,
							"name": "IERC721Receiver",
							"nameLocations": ["475:15:5"],
							"nodeType": "IdentifierPath",
							"referencedDeclaration": 1280,
							"src": "475:15:5"
						},
						"id": 1315,
						"nodeType": "InheritanceSpecifier",
						"src": "475:15:5"
					}
				],
				"canonicalName": "ERC721Holder",
				"contractDependencies": [],
				"contractKind": "contract",
				"documentation": {
					"id": 1313,
					"nodeType": "StructuredDocumentation",
					"src": "202:238:5",
					"text": " @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or\n {IERC721-setApprovalForAll}."
				},
				"fullyImplemented": true,
				"id": 1335,
				"linearizedBaseContracts": [1335, 1280],
				"name": "ERC721Holder",
				"nameLocation": "459:12:5",
				"nodeType": "ContractDefinition",
				"nodes": [
					{
						"baseFunctions": [1279],
						"body": {
							"id": 1333,
							"nodeType": "Block",
							"src": "738:54:5",
							"statements": [
								{
									"expression": {
										"expression": {
											"expression": {
												"id": 1329,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "755:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC721Holder_$1335",
													"typeString": "contract ERC721Holder"
												}
											},
											"id": 1330,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "760:16:5",
											"memberName": "onERC721Received",
											"nodeType": "MemberAccess",
											"referencedDeclaration": 1334,
											"src": "755:21:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
												"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
											}
										},
										"id": 1331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberLocation": "777:8:5",
										"memberName": "selector",
										"nodeType": "MemberAccess",
										"src": "755:30:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"functionReturnParameters": 1328,
									"id": 1332,
									"nodeType": "Return",
									"src": "748:37:5"
								}
							]
						},
						"documentation": {
							"id": 1316,
							"nodeType": "StructuredDocumentation",
							"src": "497:137:5",
							"text": " @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."
						},
						"functionSelector": "150b7a02",
						"id": 1334,
						"implemented": true,
						"kind": "function",
						"modifiers": [],
						"name": "onERC721Received",
						"nameLocation": "648:16:5",
						"nodeType": "FunctionDefinition",
						"parameters": {
							"id": 1325,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1318,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1334,
									"src": "665:7:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1317,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "665:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1320,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1334,
									"src": "674:7:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1319,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "674:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1322,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1334,
									"src": "683:7:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1321,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "683:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1324,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1334,
									"src": "692:12:5",
									"stateVariable": false,
									"storageLocation": "memory",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_memory_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 1323,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "692:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "664:41:5"
						},
						"returnParameters": {
							"id": 1328,
							"nodeType": "ParameterList",
							"parameters": [
								{
									"constant": false,
									"id": 1327,
									"mutability": "mutable",
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "VariableDeclaration",
									"scope": 1334,
									"src": "730:6:5",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1326,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "730:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "internal"
								}
							],
							"src": "729:8:5"
						},
						"scope": 1335,
						"src": "639:153:5",
						"stateMutability": "nonpayable",
						"virtual": true,
						"visibility": "public"
					}
				],
				"scope": 1336,
				"src": "441:353:5",
				"usedErrors": [],
				"usedEvents": []
			}
		],
		"src": "119:676:5"
	},
	"compiler": {
		"name": "solc",
		"version": "0.8.21+commit.d9974bed.Emscripten.clang"
	},
	"networks": {},
	"schemaVersion": "3.4.16",
	"updatedAt": "2023-10-21T05:01:11.532Z",
	"devdoc": {
		"details": "Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.",
		"kind": "dev",
		"methods": {
			"onERC721Received(address,address,uint256,bytes)": {
				"details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
			}
		},
		"version": 1
	},
	"userdoc": {
		"kind": "user",
		"methods": {},
		"version": 1
	}
}
